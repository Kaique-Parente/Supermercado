/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.supermercado.views;

import com.mycompany.supermercado.dao.ClienteDAO;
import com.mycompany.supermercado.dao.ProdutoDAO;
import com.mycompany.supermercado.dao.RelatorioAnaliticoDAO;
import com.mycompany.supermercado.dao.RelatorioSinteticoDAO;
import com.mycompany.supermercado.dao.VendaDAO;
import com.mycompany.supermercado.models.Cliente;
import com.mycompany.supermercado.models.ItemVenda;
import com.mycompany.supermercado.models.RelatorioAnalitico;
import com.mycompany.supermercado.models.Produto;
import com.mycompany.supermercado.models.RelatorioSintetico;
import com.mycompany.supermercado.models.Venda;
import com.mycompany.supermercado.utils.Conversor;
import static com.mycompany.supermercado.views.Carrinho.tblCarrinho;
import static com.mycompany.supermercado.views.RelatorioAnaliticoV.tblAnalitico;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kaiqu
 */
public class TelaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    Carrinho cr = new Carrinho();
    RelatorioAnaliticoV ra = new RelatorioAnaliticoV();

    public TelaPrincipal() {
        //Aba selecionada cor
        UIManager.put("TabbedPane.selected", Color.DARK_GRAY);
        initComponents();
        atualizarTabelaClientes();
        atualizarTabelaProdutos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        tVendas = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnConfirmarVenda = new com.mycompany.supermercado.JCustoms.ButtonCustom();
        btnCancelarVenda = new com.mycompany.supermercado.JCustoms.ButtonCustom();
        txtIdCliente = new com.mycompany.supermercado.JCustoms.TextFiledCustom();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblVendas = new javax.swing.JTable();
        btnPesquisarProdutoVenda = new com.mycompany.supermercado.JCustoms.ButtonCustom();
        btnPesquisarClienteVenda = new com.mycompany.supermercado.JCustoms.ButtonCustom();
        lbClienteVenda = new javax.swing.JLabel();
        btnVisualizarCliente1 = new com.mycompany.supermercado.JCustoms.ButtonCustom();
        btnAdicionarVenda = new com.mycompany.supermercado.JCustoms.ButtonCustom();
        txtQuantidadeVenda = new com.mycompany.supermercado.JCustoms.TextFiledCustom();
        txtPesquisarProdutoVenda = new com.mycompany.supermercado.JCustoms.PesquisarProduto();
        lbTotalVenda = new javax.swing.JLabel();
        tProdutos = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProdutos = new javax.swing.JTable();
        btnNovoProduto = new com.mycompany.supermercado.JCustoms.ButtonCustom();
        btnVisualizarProduto = new com.mycompany.supermercado.JCustoms.ButtonCustom();
        btnExcluirProduto = new com.mycompany.supermercado.JCustoms.ButtonCustom();
        btnEditarProduto = new com.mycompany.supermercado.JCustoms.ButtonCustom();
        btnPesquisarProduto = new com.mycompany.supermercado.JCustoms.ButtonCustom();
        txtPesquisarProduto = new com.mycompany.supermercado.JCustoms.PesquisarProduto();
        tClientes = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        btnNovoCliente = new com.mycompany.supermercado.JCustoms.ButtonCustom();
        btnVisualizarCliente = new com.mycompany.supermercado.JCustoms.ButtonCustom();
        btnEditarCliente = new com.mycompany.supermercado.JCustoms.ButtonCustom();
        btnExcluirCliente = new com.mycompany.supermercado.JCustoms.ButtonCustom();
        btnPesquisarVenda2 = new com.mycompany.supermercado.JCustoms.ButtonCustom();
        txtPesquisarCliente = new com.mycompany.supermercado.JCustoms.PesquisarCliente();
        tRelatorios = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblRelatorio = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        btnDetalhes = new com.mycompany.supermercado.JCustoms.ButtonCustom();
        dtInicio = new com.toedter.calendar.JDateChooser();
        dtTermino = new com.toedter.calendar.JDateChooser();
        btnPesquisarVenda1 = new com.mycompany.supermercado.JCustoms.ButtonCustom();
        lbTotalRelatorioSintetico = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane2.setBackground(new java.awt.Color(134, 83, 83));
        jTabbedPane2.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane2.setFocusable(false);
        jTabbedPane2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jTabbedPane2.setOpaque(true);
        jTabbedPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane2MouseClicked(evt);
            }
        });

        tVendas.setBackground(new java.awt.Color(255, 255, 255));
        tVendas.setForeground(new java.awt.Color(255, 51, 51));
        tVendas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tVendasFocusGained(evt);
            }
        });
        tVendas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tVendasMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Venda");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("ID do Cliente:");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Quantidade");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("R$");

        btnConfirmarVenda.setForeground(new java.awt.Color(0, 0, 0));
        btnConfirmarVenda.setText("Confirmar Venda");
        btnConfirmarVenda.setBorderColor(java.awt.Color.blue);
        btnConfirmarVenda.setBorderPainted(false);
        btnConfirmarVenda.setColorClick(new java.awt.Color(101, 101, 252));
        btnConfirmarVenda.setColorOver(new java.awt.Color(101, 101, 252));
        btnConfirmarVenda.setFocusPainted(false);
        btnConfirmarVenda.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnConfirmarVenda.setRadius(15);
        btnConfirmarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarVendaActionPerformed(evt);
            }
        });

        btnCancelarVenda.setForeground(new java.awt.Color(0, 0, 0));
        btnCancelarVenda.setText("Cancelar");
        btnCancelarVenda.setBorderColor(java.awt.Color.red);
        btnCancelarVenda.setBorderPainted(false);
        btnCancelarVenda.setColorClick(new java.awt.Color(255, 100, 100));
        btnCancelarVenda.setColorOver(new java.awt.Color(255, 80, 80));
        btnCancelarVenda.setFocusPainted(false);
        btnCancelarVenda.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnCancelarVenda.setRadius(15);
        btnCancelarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarVendaActionPerformed(evt);
            }
        });

        txtIdCliente.setForeground(new java.awt.Color(0, 0, 0));
        txtIdCliente.setCaretColor(new java.awt.Color(0, 0, 0));
        txtIdCliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtIdCliente.setSelectionColor(new java.awt.Color(108, 56, 84));
        txtIdCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdClienteActionPerformed(evt);
            }
        });

        jScrollPane5.setBackground(new java.awt.Color(51, 51, 51));

        tblVendas.setAutoCreateRowSorter(true);
        tblVendas.setBackground(new java.awt.Color(81, 0, 42));
        tblVendas.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        tblVendas.setForeground(new java.awt.Color(255, 255, 255));
        tblVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Nome", "Marca", "Categoria", "Valor", "Validade", "Quantidade", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblVendas.setFillsViewportHeight(true);
        tblVendas.setIntercellSpacing(new java.awt.Dimension(10, 5));
        tblVendas.setRowHeight(20);
        tblVendas.setShowGrid(true);
        tblVendas.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(tblVendas);
        if (tblVendas.getColumnModel().getColumnCount() > 0) {
            tblVendas.getColumnModel().getColumn(0).setResizable(false);
            tblVendas.getColumnModel().getColumn(0).setPreferredWidth(140);
            tblVendas.getColumnModel().getColumn(1).setResizable(false);
            tblVendas.getColumnModel().getColumn(1).setPreferredWidth(170);
            tblVendas.getColumnModel().getColumn(2).setResizable(false);
            tblVendas.getColumnModel().getColumn(2).setPreferredWidth(130);
            tblVendas.getColumnModel().getColumn(3).setResizable(false);
            tblVendas.getColumnModel().getColumn(3).setPreferredWidth(120);
            tblVendas.getColumnModel().getColumn(4).setResizable(false);
            tblVendas.getColumnModel().getColumn(4).setPreferredWidth(130);
            tblVendas.getColumnModel().getColumn(5).setResizable(false);
            tblVendas.getColumnModel().getColumn(5).setPreferredWidth(110);
            tblVendas.getColumnModel().getColumn(6).setResizable(false);
            tblVendas.getColumnModel().getColumn(6).setPreferredWidth(100);
            tblVendas.getColumnModel().getColumn(7).setResizable(false);
            tblVendas.getColumnModel().getColumn(7).setPreferredWidth(130);
        }

        btnPesquisarProdutoVenda.setBackground(new java.awt.Color(174, 107, 107));
        btnPesquisarProdutoVenda.setBorder(null);
        btnPesquisarProdutoVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        btnPesquisarProdutoVenda.setBorderColor(new java.awt.Color(0, 0, 0));
        btnPesquisarProdutoVenda.setColor(new java.awt.Color(174, 107, 107));
        btnPesquisarProdutoVenda.setColorClick(new java.awt.Color(174, 107, 107));
        btnPesquisarProdutoVenda.setColorOver(new java.awt.Color(153, 94, 94));
        btnPesquisarProdutoVenda.setFocusPainted(false);
        btnPesquisarProdutoVenda.setRadius(15);
        btnPesquisarProdutoVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarProdutoVendaActionPerformed(evt);
            }
        });

        btnPesquisarClienteVenda.setBackground(new java.awt.Color(174, 107, 107));
        btnPesquisarClienteVenda.setBorder(null);
        btnPesquisarClienteVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        btnPesquisarClienteVenda.setBorderColor(new java.awt.Color(0, 0, 0));
        btnPesquisarClienteVenda.setColor(new java.awt.Color(174, 107, 107));
        btnPesquisarClienteVenda.setColorClick(new java.awt.Color(174, 107, 107));
        btnPesquisarClienteVenda.setColorOver(new java.awt.Color(153, 94, 94));
        btnPesquisarClienteVenda.setFocusPainted(false);
        btnPesquisarClienteVenda.setRadius(15);
        btnPesquisarClienteVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarClienteVendaActionPerformed(evt);
            }
        });

        lbClienteVenda.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lbClienteVenda.setForeground(new java.awt.Color(0, 0, 0));
        lbClienteVenda.setText("usuÃ¡rio");

        btnVisualizarCliente1.setForeground(new java.awt.Color(0, 0, 0));
        btnVisualizarCliente1.setText("Carrinho");
        btnVisualizarCliente1.setBorderColor(new java.awt.Color(0, 0, 0));
        btnVisualizarCliente1.setBorderPainted(false);
        btnVisualizarCliente1.setColorClick(new java.awt.Color(255, 100, 100));
        btnVisualizarCliente1.setColorOver(new java.awt.Color(255, 80, 80));
        btnVisualizarCliente1.setFocusPainted(false);
        btnVisualizarCliente1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnVisualizarCliente1.setRadius(15);
        btnVisualizarCliente1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarCliente1ActionPerformed(evt);
            }
        });

        btnAdicionarVenda.setForeground(new java.awt.Color(0, 0, 0));
        btnAdicionarVenda.setText("Adicionar");
        btnAdicionarVenda.setBorderColor(new java.awt.Color(0, 0, 0));
        btnAdicionarVenda.setBorderPainted(false);
        btnAdicionarVenda.setColorClick(new java.awt.Color(255, 100, 100));
        btnAdicionarVenda.setColorOver(new java.awt.Color(255, 80, 80));
        btnAdicionarVenda.setFocusPainted(false);
        btnAdicionarVenda.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnAdicionarVenda.setRadius(15);
        btnAdicionarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarVendaActionPerformed(evt);
            }
        });

        txtQuantidadeVenda.setForeground(new java.awt.Color(0, 0, 0));
        txtQuantidadeVenda.setCaretColor(new java.awt.Color(0, 0, 0));
        txtQuantidadeVenda.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtQuantidadeVenda.setSelectionColor(new java.awt.Color(108, 56, 84));
        txtQuantidadeVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantidadeVendaActionPerformed(evt);
            }
        });

        txtPesquisarProdutoVenda.setForeground(new java.awt.Color(0, 0, 0));
        txtPesquisarProdutoVenda.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lbTotalVenda.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lbTotalVenda.setForeground(new java.awt.Color(0, 0, 0));
        lbTotalVenda.setText("0,00");

        javax.swing.GroupLayout tVendasLayout = new javax.swing.GroupLayout(tVendas);
        tVendas.setLayout(tVendasLayout);
        tVendasLayout.setHorizontalGroup(
            tVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tVendasLayout.createSequentialGroup()
                .addGroup(tVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tVendasLayout.createSequentialGroup()
                        .addGroup(tVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tVendasLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnCancelarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnConfirmarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnAdicionarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnVisualizarCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tVendasLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(tVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(tVendasLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtQuantidadeVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(11, 11, 11)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lbTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(tVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(tVendasLayout.createSequentialGroup()
                                            .addComponent(txtPesquisarProdutoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(btnPesquisarProdutoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(tVendasLayout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addGap(3, 3, 3)
                                            .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(btnPesquisarClienteVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lbClienteVenda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tVendasLayout.createSequentialGroup()
                        .addContainerGap(22, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 686, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(tVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tVendasLayout.createSequentialGroup()
                    .addContainerGap(28, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(29, Short.MAX_VALUE)))
        );
        tVendasLayout.setVerticalGroup(
            tVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tVendasLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(tVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisarClienteVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbClienteVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(tVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPesquisarProdutoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPesquisarProdutoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 324, Short.MAX_VALUE)
                .addGroup(tVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuantidadeVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(tVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConfirmarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVisualizarCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
            .addGroup(tVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tVendasLayout.createSequentialGroup()
                    .addContainerGap(170, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(168, Short.MAX_VALUE)))
        );

        jTabbedPane2.addTab("    Vendas    ", tVendas);

        tProdutos.setBackground(new java.awt.Color(255, 255, 255));
        tProdutos.setForeground(new java.awt.Color(0, 0, 0));
        tProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tProdutosMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Lista de Produtos");

        jScrollPane2.setBackground(new java.awt.Color(51, 51, 51));

        tblProdutos.setAutoCreateRowSorter(true);
        tblProdutos.setBackground(new java.awt.Color(81, 0, 42));
        tblProdutos.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        tblProdutos.setForeground(new java.awt.Color(255, 255, 255));
        tblProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Nome", "Marca", "Categoria", "Valor", "Validade", "Quantidade", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProdutos.setFillsViewportHeight(true);
        tblProdutos.setIntercellSpacing(new java.awt.Dimension(10, 5));
        tblProdutos.setRowHeight(20);
        tblProdutos.setShowGrid(true);
        tblProdutos.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblProdutos);
        if (tblProdutos.getColumnModel().getColumnCount() > 0) {
            tblProdutos.getColumnModel().getColumn(0).setResizable(false);
            tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(140);
            tblProdutos.getColumnModel().getColumn(1).setResizable(false);
            tblProdutos.getColumnModel().getColumn(1).setPreferredWidth(170);
            tblProdutos.getColumnModel().getColumn(2).setResizable(false);
            tblProdutos.getColumnModel().getColumn(2).setPreferredWidth(130);
            tblProdutos.getColumnModel().getColumn(3).setResizable(false);
            tblProdutos.getColumnModel().getColumn(3).setPreferredWidth(120);
            tblProdutos.getColumnModel().getColumn(4).setResizable(false);
            tblProdutos.getColumnModel().getColumn(4).setPreferredWidth(130);
            tblProdutos.getColumnModel().getColumn(5).setResizable(false);
            tblProdutos.getColumnModel().getColumn(5).setPreferredWidth(110);
            tblProdutos.getColumnModel().getColumn(6).setResizable(false);
            tblProdutos.getColumnModel().getColumn(6).setPreferredWidth(100);
            tblProdutos.getColumnModel().getColumn(7).setResizable(false);
            tblProdutos.getColumnModel().getColumn(7).setPreferredWidth(130);
        }

        btnNovoProduto.setBackground(new java.awt.Color(174, 107, 107));
        btnNovoProduto.setForeground(new java.awt.Color(0, 0, 0));
        btnNovoProduto.setText("+ Novo Produto");
        btnNovoProduto.setBorderColor(java.awt.Color.red);
        btnNovoProduto.setColor(new java.awt.Color(174, 107, 107));
        btnNovoProduto.setColorClick(new java.awt.Color(255, 100, 100));
        btnNovoProduto.setColorOver(new java.awt.Color(255, 80, 80));
        btnNovoProduto.setFocusPainted(false);
        btnNovoProduto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnNovoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoProdutoActionPerformed(evt);
            }
        });

        btnVisualizarProduto.setForeground(new java.awt.Color(0, 0, 0));
        btnVisualizarProduto.setText("VIsualizar");
        btnVisualizarProduto.setBorderColor(new java.awt.Color(0, 0, 0));
        btnVisualizarProduto.setBorderPainted(false);
        btnVisualizarProduto.setColorClick(new java.awt.Color(255, 100, 100));
        btnVisualizarProduto.setColorOver(new java.awt.Color(255, 80, 80));
        btnVisualizarProduto.setFocusPainted(false);
        btnVisualizarProduto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnVisualizarProduto.setRadius(15);
        btnVisualizarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarProdutoActionPerformed(evt);
            }
        });

        btnExcluirProduto.setForeground(new java.awt.Color(0, 0, 0));
        btnExcluirProduto.setText("Excluir");
        btnExcluirProduto.setBorderColor(new java.awt.Color(0, 0, 0));
        btnExcluirProduto.setBorderPainted(false);
        btnExcluirProduto.setColorClick(new java.awt.Color(255, 100, 100));
        btnExcluirProduto.setColorOver(new java.awt.Color(255, 80, 80));
        btnExcluirProduto.setFocusPainted(false);
        btnExcluirProduto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnExcluirProduto.setRadius(15);
        btnExcluirProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirProdutoActionPerformed(evt);
            }
        });

        btnEditarProduto.setForeground(new java.awt.Color(0, 0, 0));
        btnEditarProduto.setText("Editar");
        btnEditarProduto.setBorderColor(new java.awt.Color(0, 0, 0));
        btnEditarProduto.setBorderPainted(false);
        btnEditarProduto.setColorClick(new java.awt.Color(255, 100, 100));
        btnEditarProduto.setColorOver(new java.awt.Color(255, 80, 80));
        btnEditarProduto.setFocusPainted(false);
        btnEditarProduto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnEditarProduto.setRadius(15);
        btnEditarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarProdutoActionPerformed(evt);
            }
        });

        btnPesquisarProduto.setBorder(null);
        btnPesquisarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        btnPesquisarProduto.setBorderColor(new java.awt.Color(0, 0, 0));
        btnPesquisarProduto.setColor(new java.awt.Color(174, 107, 107));
        btnPesquisarProduto.setColorClick(new java.awt.Color(174, 107, 107));
        btnPesquisarProduto.setColorOver(new java.awt.Color(153, 94, 94));
        btnPesquisarProduto.setFocusPainted(false);
        btnPesquisarProduto.setRadius(15);
        btnPesquisarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarProdutoActionPerformed(evt);
            }
        });

        txtPesquisarProduto.setForeground(new java.awt.Color(0, 0, 0));
        txtPesquisarProduto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout tProdutosLayout = new javax.swing.GroupLayout(tProdutos);
        tProdutos.setLayout(tProdutosLayout);
        tProdutosLayout.setHorizontalGroup(
            tProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tProdutosLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(tProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(tProdutosLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPesquisarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(tProdutosLayout.createSequentialGroup()
                            .addComponent(btnNovoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnVisualizarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnEditarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnExcluirProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        tProdutosLayout.setVerticalGroup(
            tProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tProdutosLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(tProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(btnPesquisarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPesquisarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(tProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnEditarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnExcluirProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnVisualizarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnNovoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Produtos", tProdutos);

        tClientes.setBackground(new java.awt.Color(255, 255, 255));
        tClientes.setForeground(new java.awt.Color(102, 102, 255));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Lista de Clientes");

        jScrollPane3.setBackground(new java.awt.Color(51, 51, 51));

        tblClientes.setAutoCreateRowSorter(true);
        tblClientes.setBackground(new java.awt.Color(81, 0, 42));
        tblClientes.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        tblClientes.setForeground(new java.awt.Color(255, 255, 255));
        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CPF", "Nome", "Telefone", "Email", "Estado Civil", "Sexo", "Rua", "Estado", "Bairro", "Data de Nascimento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblClientes.setFillsViewportHeight(true);
        tblClientes.setIntercellSpacing(new java.awt.Dimension(10, 5));
        tblClientes.setRowHeight(20);
        tblClientes.setShowGrid(true);
        jScrollPane3.setViewportView(tblClientes);
        if (tblClientes.getColumnModel().getColumnCount() > 0) {
            tblClientes.getColumnModel().getColumn(0).setResizable(false);
            tblClientes.getColumnModel().getColumn(0).setPreferredWidth(40);
            tblClientes.getColumnModel().getColumn(1).setResizable(false);
            tblClientes.getColumnModel().getColumn(2).setResizable(false);
            tblClientes.getColumnModel().getColumn(3).setResizable(false);
            tblClientes.getColumnModel().getColumn(4).setResizable(false);
            tblClientes.getColumnModel().getColumn(5).setResizable(false);
            tblClientes.getColumnModel().getColumn(6).setResizable(false);
            tblClientes.getColumnModel().getColumn(7).setResizable(false);
            tblClientes.getColumnModel().getColumn(8).setResizable(false);
            tblClientes.getColumnModel().getColumn(9).setResizable(false);
            tblClientes.getColumnModel().getColumn(10).setResizable(false);
        }

        btnNovoCliente.setBackground(new java.awt.Color(174, 107, 107));
        btnNovoCliente.setForeground(new java.awt.Color(0, 0, 0));
        btnNovoCliente.setText("+ Novo Cliente");
        btnNovoCliente.setBorderColor(java.awt.Color.red);
        btnNovoCliente.setColor(new java.awt.Color(174, 107, 107));
        btnNovoCliente.setColorClick(new java.awt.Color(255, 100, 100));
        btnNovoCliente.setColorOver(new java.awt.Color(255, 80, 80));
        btnNovoCliente.setFocusPainted(false);
        btnNovoCliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnNovoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoClienteActionPerformed(evt);
            }
        });

        btnVisualizarCliente.setForeground(new java.awt.Color(0, 0, 0));
        btnVisualizarCliente.setText("VIsualizar");
        btnVisualizarCliente.setBorderColor(new java.awt.Color(0, 0, 0));
        btnVisualizarCliente.setBorderPainted(false);
        btnVisualizarCliente.setColorClick(new java.awt.Color(255, 100, 100));
        btnVisualizarCliente.setColorOver(new java.awt.Color(255, 80, 80));
        btnVisualizarCliente.setFocusPainted(false);
        btnVisualizarCliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnVisualizarCliente.setRadius(15);
        btnVisualizarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarClienteActionPerformed(evt);
            }
        });

        btnEditarCliente.setForeground(new java.awt.Color(0, 0, 0));
        btnEditarCliente.setText("Editar");
        btnEditarCliente.setBorderColor(new java.awt.Color(0, 0, 0));
        btnEditarCliente.setBorderPainted(false);
        btnEditarCliente.setColorClick(new java.awt.Color(255, 100, 100));
        btnEditarCliente.setColorOver(new java.awt.Color(255, 80, 80));
        btnEditarCliente.setFocusPainted(false);
        btnEditarCliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnEditarCliente.setRadius(15);
        btnEditarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarClienteActionPerformed(evt);
            }
        });

        btnExcluirCliente.setForeground(new java.awt.Color(0, 0, 0));
        btnExcluirCliente.setText("Excluir");
        btnExcluirCliente.setBorderColor(new java.awt.Color(0, 0, 0));
        btnExcluirCliente.setBorderPainted(false);
        btnExcluirCliente.setColorClick(new java.awt.Color(255, 100, 100));
        btnExcluirCliente.setColorOver(new java.awt.Color(255, 80, 80));
        btnExcluirCliente.setFocusPainted(false);
        btnExcluirCliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnExcluirCliente.setRadius(15);
        btnExcluirCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirClienteActionPerformed(evt);
            }
        });

        btnPesquisarVenda2.setBorder(null);
        btnPesquisarVenda2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        btnPesquisarVenda2.setBorderColor(new java.awt.Color(0, 0, 0));
        btnPesquisarVenda2.setColor(new java.awt.Color(174, 107, 107));
        btnPesquisarVenda2.setColorClick(new java.awt.Color(174, 107, 107));
        btnPesquisarVenda2.setColorOver(new java.awt.Color(153, 94, 94));
        btnPesquisarVenda2.setFocusPainted(false);
        btnPesquisarVenda2.setRadius(15);
        btnPesquisarVenda2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarVenda2ActionPerformed(evt);
            }
        });

        txtPesquisarCliente.setForeground(new java.awt.Color(0, 0, 0));
        txtPesquisarCliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout tClientesLayout = new javax.swing.GroupLayout(tClientes);
        tClientes.setLayout(tClientesLayout);
        tClientesLayout.setHorizontalGroup(
            tClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tClientesLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(tClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(tClientesLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPesquisarVenda2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(tClientesLayout.createSequentialGroup()
                            .addComponent(btnNovoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnVisualizarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnEditarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnExcluirCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        tClientesLayout.setVerticalGroup(
            tClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tClientesLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(tClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel6)
                    .addComponent(btnPesquisarVenda2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPesquisarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(tClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnEditarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnExcluirCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnVisualizarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnNovoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Clientes", tClientes);

        tRelatorios.setBackground(new java.awt.Color(255, 255, 255));
        tRelatorios.setForeground(new java.awt.Color(153, 0, 0));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Data InÃ­cio");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Data Termino");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("RelÃ¡torios");

        jScrollPane4.setBackground(new java.awt.Color(51, 51, 51));

        tblRelatorio.setAutoCreateRowSorter(true);
        tblRelatorio.setBackground(new java.awt.Color(81, 0, 42));
        tblRelatorio.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        tblRelatorio.setForeground(new java.awt.Color(255, 255, 255));
        tblRelatorio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Venda", "Cliente", "Valor", "Data"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRelatorio.setFillsViewportHeight(true);
        tblRelatorio.setIntercellSpacing(new java.awt.Dimension(10, 5));
        tblRelatorio.setRowHeight(20);
        tblRelatorio.setShowGrid(true);
        jScrollPane4.setViewportView(tblRelatorio);
        if (tblRelatorio.getColumnModel().getColumnCount() > 0) {
            tblRelatorio.getColumnModel().getColumn(0).setResizable(false);
            tblRelatorio.getColumnModel().getColumn(1).setResizable(false);
            tblRelatorio.getColumnModel().getColumn(2).setResizable(false);
            tblRelatorio.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel10.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Valor Total: R$");

        btnDetalhes.setBackground(new java.awt.Color(174, 107, 107));
        btnDetalhes.setForeground(new java.awt.Color(0, 0, 0));
        btnDetalhes.setText("Detalhes");
        btnDetalhes.setBorderColor(java.awt.Color.red);
        btnDetalhes.setColor(new java.awt.Color(174, 107, 107));
        btnDetalhes.setColorClick(new java.awt.Color(255, 100, 100));
        btnDetalhes.setColorOver(new java.awt.Color(255, 80, 80));
        btnDetalhes.setFocusPainted(false);
        btnDetalhes.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnDetalhes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetalhesActionPerformed(evt);
            }
        });

        dtInicio.setBackground(new java.awt.Color(255, 255, 255));
        dtInicio.setForeground(new java.awt.Color(0, 0, 0));
        dtInicio.setAlignmentY(3.0F);
        dtInicio.setDateFormatString("dd/MM/yyyy");
        dtInicio.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        dtTermino.setBackground(new java.awt.Color(255, 255, 255));
        dtTermino.setForeground(new java.awt.Color(0, 0, 0));
        dtTermino.setDateFormatString("dd/MM/yyyy");
        dtTermino.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        btnPesquisarVenda1.setBackground(new java.awt.Color(174, 107, 107));
        btnPesquisarVenda1.setBorder(null);
        btnPesquisarVenda1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        btnPesquisarVenda1.setBorderColor(new java.awt.Color(0, 0, 0));
        btnPesquisarVenda1.setColor(new java.awt.Color(174, 107, 107));
        btnPesquisarVenda1.setColorClick(new java.awt.Color(174, 107, 107));
        btnPesquisarVenda1.setColorOver(new java.awt.Color(153, 94, 94));
        btnPesquisarVenda1.setFocusPainted(false);
        btnPesquisarVenda1.setRadius(15);
        btnPesquisarVenda1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarVenda1ActionPerformed(evt);
            }
        });

        lbTotalRelatorioSintetico.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lbTotalRelatorioSintetico.setForeground(new java.awt.Color(0, 0, 0));
        lbTotalRelatorioSintetico.setText("0,00");

        javax.swing.GroupLayout tRelatoriosLayout = new javax.swing.GroupLayout(tRelatorios);
        tRelatorios.setLayout(tRelatoriosLayout);
        tRelatoriosLayout.setHorizontalGroup(
            tRelatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tRelatoriosLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(tRelatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tRelatoriosLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tRelatoriosLayout.createSequentialGroup()
                        .addGroup(tRelatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4)
                            .addGroup(tRelatoriosLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dtInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dtTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                                .addComponent(btnPesquisarVenda1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tRelatoriosLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbTotalRelatorioSintetico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDetalhes, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(21, 21, 21))))
        );
        tRelatoriosLayout.setVerticalGroup(
            tRelatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tRelatoriosLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel9)
                .addGap(8, 8, 8)
                .addGroup(tRelatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dtInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dtTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisarVenda1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tRelatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDetalhes, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTotalRelatorioSintetico))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("RelÃ¡torios", tRelatorios);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void tProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tProdutosMouseClicked
        //tProdutos.setBackground(Color.yellow);
    }//GEN-LAST:event_tProdutosMouseClicked

    private void tVendasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tVendasMouseClicked

    }//GEN-LAST:event_tVendasMouseClicked

    private void tVendasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tVendasFocusGained

    }//GEN-LAST:event_tVendasFocusGained

    private void jTabbedPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane2MouseClicked

    }//GEN-LAST:event_jTabbedPane2MouseClicked

    private void btnNovoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoClienteActionPerformed
        Clientes cl = new Clientes();
        cl.setVisible(true);
    }//GEN-LAST:event_btnNovoClienteActionPerformed

    private void btnDetalhesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetalhesActionPerformed
        
        int linhaSelecionada = tblRelatorio.getSelectedRow();
        
        if(linhaSelecionada >= 0){
            DefaultTableModel modelo = (DefaultTableModel) tblRelatorio.getModel();
            int idVenda = Integer.parseInt( modelo.getValueAt(linhaSelecionada, 0).toString());
            ArrayList<RelatorioAnalitico> lstRelatorioAnalitico = RelatorioAnaliticoDAO.listar(idVenda);
            
            DefaultTableModel modelo2 = (DefaultTableModel) tblAnalitico.getModel();
            modelo2.setRowCount(0);
            
            for(RelatorioAnalitico item : lstRelatorioAnalitico){
                modelo2.addRow(new String[]{
                    item.getNomeProduto(),
                    String.valueOf(item.getValorProduto()),
                    String.valueOf(item.getQtdProduto())
                });
            }
            ra.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma linha!", "Erro!", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_btnDetalhesActionPerformed

    private void btnNovoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoProdutoActionPerformed
        Produtos produto = new Produtos();
        produto.setVisible(true);
        produto.pack();
        produto.setLocationRelativeTo(null);
        produto.setDefaultCloseOperation(Produtos.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btnNovoProdutoActionPerformed

    private void btnCancelarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarVendaActionPerformed
        txtPesquisarProdutoVenda.setText("   Pesquisar Nome de Produto");
        lbTotalVenda.setText("0,00");
        txtQuantidadeVenda.setText("");
        atualizarTabelaProdutos();
        DefaultTableModel modelo = (DefaultTableModel) tblCarrinho.getModel();
        modelo.setRowCount(0);
    }//GEN-LAST:event_btnCancelarVendaActionPerformed

    private void btnExcluirProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirProdutoActionPerformed
        int indice = tblProdutos.getSelectedRow();

        if (indice >= 0) {
            //DAO
            //Tabela Produtos
            DefaultTableModel model = (DefaultTableModel) tblProdutos.getModel();
            long idExcluir = Long.parseLong(model.getValueAt(indice, 0).toString());

            boolean retorno = ProdutoDAO.excluir(idExcluir);

            if (retorno) {
                JOptionPane.showMessageDialog(rootPane, "Sucesso!");
                model.removeRow(indice);
            }

            atualizarTabelaProdutos();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma linha!", "Erro!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirProdutoActionPerformed

    private void btnExcluirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirClienteActionPerformed
        int indice = tblClientes.getSelectedRow();

        if (indice >= 0) {
            //Resgatar o modelo da tabela para exlcuir a linha
            DefaultTableModel model = (DefaultTableModel) tblClientes.getModel();

            //DAO
            int idExcluir = Integer.parseInt(model.getValueAt(indice, 0).toString());
            boolean retorno = ClienteDAO.excluir(idExcluir);
            if (retorno) {
                JOptionPane.showMessageDialog(rootPane, "Sucesso!");
                model.removeRow(indice);
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma linha!", "Erro!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirClienteActionPerformed

    private void btnEditarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarClienteActionPerformed

        int linhaSelecionada = tblClientes.getSelectedRow();
        if (linhaSelecionada >= 0) {
            DateTimeFormatter fm2 = DateTimeFormatter.ofPattern("dd/MM/uuuu");
            LocalDate dataNascimento = null;

            DefaultTableModel modelo = (DefaultTableModel) tblClientes.getModel();
            int id = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 0).toString());
            long cpf = Long.parseLong(modelo.getValueAt(linhaSelecionada, 1).toString());
            String nome = modelo.getValueAt(linhaSelecionada, 2).toString();
            long telefone = Long.parseLong(modelo.getValueAt(linhaSelecionada, 3).toString());
            String email = modelo.getValueAt(linhaSelecionada, 4).toString();
            String estadoCivil = modelo.getValueAt(linhaSelecionada, 5).toString();
            String sexo = modelo.getValueAt(linhaSelecionada, 6).toString();
            String rua = modelo.getValueAt(linhaSelecionada, 7).toString();
            String estado = modelo.getValueAt(linhaSelecionada, 8).toString();
            String bairro = modelo.getValueAt(linhaSelecionada, 9).toString();
            dataNascimento = LocalDate.parse(modelo.getValueAt(linhaSelecionada, 10).toString(), fm2);

            Cliente clienteAlterar = new Cliente(id, nome, cpf, telefone, email, estadoCivil, sexo, rua, estado, bairro, dataNascimento);
            Clientes telaCadastro = new Clientes(clienteAlterar);
            telaCadastro.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma Linha!", "Erro!", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnEditarClienteActionPerformed

    private void btnVisualizarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarClienteActionPerformed

        int linhaSelecionada = tblClientes.getSelectedRow();
        if (linhaSelecionada >= 0) {
            DateTimeFormatter fm2 = DateTimeFormatter.ofPattern("dd/MM/uuuu");
            LocalDate dataNascimento = null;

            DefaultTableModel modelo = (DefaultTableModel) tblClientes.getModel();
            int id = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 0).toString());
            long cpf = Long.parseLong(modelo.getValueAt(linhaSelecionada, 1).toString());
            String nome = modelo.getValueAt(linhaSelecionada, 2).toString();
            long telefone = Long.parseLong(modelo.getValueAt(linhaSelecionada, 3).toString());
            String email = modelo.getValueAt(linhaSelecionada, 4).toString();
            String estadoCivil = modelo.getValueAt(linhaSelecionada, 5).toString();
            String sexo = modelo.getValueAt(linhaSelecionada, 6).toString();
            String rua = modelo.getValueAt(linhaSelecionada, 7).toString();
            String estado = modelo.getValueAt(linhaSelecionada, 8).toString();
            String bairro = modelo.getValueAt(linhaSelecionada, 9).toString();
            dataNascimento = LocalDate.parse(modelo.getValueAt(linhaSelecionada, 10).toString(), fm2);

            Cliente clienteVisualizar = new Cliente(id, nome, cpf, telefone, email, estadoCivil, sexo, rua, estado, bairro, dataNascimento);
            Clientes telaCadastro = new Clientes(clienteVisualizar, true);
            telaCadastro.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma Linha!", "Erro!", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnVisualizarClienteActionPerformed

    private void btnVisualizarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarProdutoActionPerformed
        int linhaSelecionada = tblProdutos.getSelectedRow();

        if (linhaSelecionada >= 0) {
            DateTimeFormatter fm2 = DateTimeFormatter.ofPattern("dd/MM/uuuu");
            LocalDate dataValidade = null;

            DefaultTableModel modelo = (DefaultTableModel) tblProdutos.getModel();
            long codigo = Long.parseLong(modelo.getValueAt(linhaSelecionada, 0).toString());
            String nome = modelo.getValueAt(linhaSelecionada, 1).toString();
            String marca = modelo.getValueAt(linhaSelecionada, 2).toString();
            String categoria = modelo.getValueAt(linhaSelecionada, 3).toString();
            Double valor = Conversor.converterValor(modelo.getValueAt(linhaSelecionada, 4).toString());
            dataValidade = LocalDate.parse(modelo.getValueAt(linhaSelecionada, 5).toString(), fm2);
            int quantidade = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 6).toString());

            String txtStatus = modelo.getValueAt(linhaSelecionada, 7).toString();
            boolean status = txtStatus.equals("Em estoque");

            Produto produtoVisualizar = new Produto(codigo, nome, marca, categoria, valor, dataValidade, quantidade, status);
            Produtos telaCadastro = new Produtos(produtoVisualizar, true);
            telaCadastro.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma Linha!", "Erro!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnVisualizarProdutoActionPerformed

    private void btnEditarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarProdutoActionPerformed
        int linhaSelecionada = tblProdutos.getSelectedRow();

        if (linhaSelecionada >= 0) {
            DateTimeFormatter fm2 = DateTimeFormatter.ofPattern("dd/MM/uuuu");
            LocalDate dataValidade = null;

            DefaultTableModel modelo = (DefaultTableModel) tblProdutos.getModel();
            long codigo = Long.parseLong(modelo.getValueAt(linhaSelecionada, 0).toString());
            String nome = modelo.getValueAt(linhaSelecionada, 1).toString();
            String marca = modelo.getValueAt(linhaSelecionada, 2).toString();
            String categoria = modelo.getValueAt(linhaSelecionada, 3).toString();
            Double valor = Conversor.converterValor(modelo.getValueAt(linhaSelecionada, 4).toString());
            dataValidade = LocalDate.parse(modelo.getValueAt(linhaSelecionada, 5).toString(), fm2);
            int quantidade = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 6).toString());

            String txtStatus = modelo.getValueAt(linhaSelecionada, 7).toString();
            boolean status = txtStatus.equals("Em estoque");

            Produto produtoVisualizar = new Produto(codigo, nome, marca, categoria, valor, dataValidade, quantidade, status);
            Produtos telaCadastro = new Produtos(produtoVisualizar);
            telaCadastro.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma Linha!", "Erro!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarProdutoActionPerformed

    private void btnVisualizarCliente1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarCliente1ActionPerformed
        cr.setVisible(true);
    }//GEN-LAST:event_btnVisualizarCliente1ActionPerformed

    private void btnAdicionarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarVendaActionPerformed

        String retorno = "";

        //Verificar Linha selecionada
        int linhaSelecionada = tblVendas.getSelectedRow();

        if (txtIdCliente.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Digite o ID do Cliente!", "Erro!", JOptionPane.WARNING_MESSAGE);
        } else {
            int id = Integer.parseInt(txtIdCliente.getText());

            retorno = ClienteDAO.buscarPorID(id);
            if (retorno.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Cliente nÃ£o encontrado!", "Erro!", JOptionPane.WARNING_MESSAGE);
                lbClienteVenda.setText("usuÃ¡rio");
            } else {
                lbClienteVenda.setText(retorno);
            }
        }

        if (linhaSelecionada >= 0) {

            //VerificaÃ§Ã£o do Pesquisar ID Cliente       
            DefaultTableModel modelo = (DefaultTableModel) tblVendas.getModel();
            long id = Long.parseLong(modelo.getValueAt(linhaSelecionada, 0).toString());
            String nome = modelo.getValueAt(linhaSelecionada, 1).toString();
            String marca = modelo.getValueAt(linhaSelecionada, 2).toString();
            double valor = Conversor.converterValor(modelo.getValueAt(linhaSelecionada, 4).toString());
            int qtdTabela = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 6).toString());

            //Quantidade
            int qtdPedido = 0;
            if (!txtQuantidadeVenda.getText().equals("")) {
                try {
                    qtdPedido = Integer.parseInt(txtQuantidadeVenda.getText());
                } catch (NumberFormatException e) {
                }
            }

            ArrayList<Produto> verificar = new ArrayList<>();
            verificar.add(new Produto(id, nome, marca, valor, qtdPedido));

            ArrayList<Produto> carrinho = new ArrayList<>();

            for (Produto obj : verificar) {
                if (obj.getQuantidade() <= qtdTabela && obj.getQuantidade() > 0) {
                    if (!txtIdCliente.getText().equals("") && !retorno.equals("") && !txtQuantidadeVenda.getText().equals("")) {
                        carrinho.add(obj);
                        if (!Carrinho.atualizarCarrinho(carrinho)) {
                            JOptionPane.showMessageDialog(rootPane, "Produto existente no Carrinho!", "Erro!", JOptionPane.WARNING_MESSAGE);
                        }

                        lbTotalVenda.setText(String.format("%.2f", Carrinho.totalVenda()));
                    }
                } else if (obj.getQuantidade() <= 0) {
                    JOptionPane.showMessageDialog(rootPane, "Digite a quantidade corretamente!", "Erro!", JOptionPane.WARNING_MESSAGE);
                } else if (obj.getQuantidade() > 0) {
                    JOptionPane.showMessageDialog(rootPane, "Sem estoque suficiente!", "Erro!", JOptionPane.WARNING_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma Linha!", "Erro!", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnAdicionarVendaActionPerformed

    private void btnPesquisarVenda2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarVenda2ActionPerformed
        if (txtPesquisarCliente.getText().equals("   Pesquisar Nome de Cliente")) {
            atualizarTabelaClientes();
        } else {
            String nome = txtPesquisarCliente.getText();
            //TODO: Chamar a DAO para filtrar pelo nÃºmero
            ArrayList<Cliente> retorno = ClienteDAO.buscarPorTexto(nome);

            if (retorno != null) {
                DefaultTableModel modelo = (DefaultTableModel) tblClientes.getModel();
                modelo.setRowCount(0);

                DateTimeFormatter fm1 = DateTimeFormatter.ofPattern("dd/MM/uuuu");
                String dataNascimentoS = "";

                for (Cliente obj : retorno) {
                    dataNascimentoS = obj.getDataNascimento().format(fm1);
                    modelo.addRow(new String[]{
                        String.valueOf(obj.getID()),
                        String.valueOf(obj.getCpf()),
                        obj.getNome(),
                        String.valueOf(obj.getTelefone()),
                        obj.getEmail(),
                        obj.getEstadoCivil(),
                        obj.getSexo(),
                        obj.getRua(),
                        obj.getEstado(),
                        obj.getBairro(),
                        dataNascimentoS
                    });
                }
            }
        }
    }//GEN-LAST:event_btnPesquisarVenda2ActionPerformed

    private void btnPesquisarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarProdutoActionPerformed
        if (txtPesquisarProduto.getText().equals("   Pesquisar Nome de Produto")) {
            atualizarTabelaProdutos();
        } else {
            String nome = txtPesquisarProduto.getText();
            //TODO: Chamar a DAO para filtrar pelo nÃºmero
            ArrayList<Produto> retorno = ProdutoDAO.buscarPorTexto(nome);

            if (retorno != null) {
                DefaultTableModel modelo = (DefaultTableModel) tblProdutos.getModel();
                modelo.setRowCount(0);

                DateTimeFormatter fm1 = DateTimeFormatter.ofPattern("dd/MM/uuuu");
                String dataValidade = "";

                for (Produto obj : retorno) {
                    dataValidade = obj.getValidade().format(fm1);

                    modelo.addRow(new String[]{
                        String.valueOf(obj.getCodigo()),
                        obj.getNome(),
                        obj.getMarca(),
                        obj.getCategoria(),
                        "R$ " + String.format("%.2f", obj.getValor()),
                        dataValidade,
                        String.valueOf(obj.getQuantidade()),
                        obj.getStatus() == true ? "Em estoque" : "Sem estoque"
                    });
                }
            }
        }
    }//GEN-LAST:event_btnPesquisarProdutoActionPerformed

    private void btnPesquisarProdutoVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarProdutoVendaActionPerformed
        if (txtPesquisarProdutoVenda.getText().equals("   Pesquisar Nome de Produto")) {
            atualizarTabelaProdutos();
        } else {
            String nome = txtPesquisarProdutoVenda.getText();
            //TODO: Chamar a DAO para filtrar pelo nÃºmero
            ArrayList<Produto> retorno = ProdutoDAO.buscarPorTexto(nome);

            if (retorno != null) {
                DefaultTableModel modelo = (DefaultTableModel) tblVendas.getModel();
                modelo.setRowCount(0);

                DateTimeFormatter fm1 = DateTimeFormatter.ofPattern("dd/MM/uuuu");
                String dataValidade = "";

                for (Produto obj : retorno) {
                    dataValidade = obj.getValidade().format(fm1);

                    if (obj.getStatus()) {
                        modelo.addRow(new String[]{
                            String.valueOf(obj.getCodigo()),
                            obj.getNome(),
                            obj.getMarca(),
                            obj.getCategoria(),
                            "R$ " + String.format("%.2f", obj.getValor()),
                            dataValidade,
                            String.valueOf(obj.getQuantidade()),
                            obj.getStatus() == true ? "Em estoque" : "Sem estoque"
                        });
                    }
                }
            }
        }
    }//GEN-LAST:event_btnPesquisarProdutoVendaActionPerformed

    private void txtQuantidadeVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantidadeVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantidadeVendaActionPerformed

    private void btnConfirmarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarVendaActionPerformed

        String retorno = "";

        if (txtIdCliente.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Digite o ID do Cliente!", "Erro!", JOptionPane.WARNING_MESSAGE);
        } else {
            int id = Integer.parseInt(txtIdCliente.getText());

            retorno = ClienteDAO.buscarPorID(id);
            if (retorno.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Cliente nÃ£o encontrado!", "Erro!", JOptionPane.WARNING_MESSAGE);
                lbClienteVenda.setText("usuÃ¡rio");
            } else {

                if (lbTotalVenda.getText().equals("0,00")) {
                    JOptionPane.showMessageDialog(rootPane, "Adicione Itens ao carrinho!", "Erro!", JOptionPane.WARNING_MESSAGE);
                } else {

                    //Venda
                    double valorVenda = Double.parseDouble(lbTotalVenda.getText().replace(',', '.'));
                    Venda venda = new Venda(valorVenda, id);

                    //ItemVenda - Carrinho
                    ArrayList<ItemVenda> itens = Carrinho.itensCarrinho();

                    for (ItemVenda item : itens) {
                        venda.addItens(item);
                    }

                    boolean verificar = VendaDAO.salvar(venda);

                    if (verificar) {
                        JOptionPane.showMessageDialog(rootPane, "Sucesso!");
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Falha!");
                    }
                }

            }
        }

        /*
        JOptionPane.showMessageDialog(rootPane, "Compra Efetuada", "Compra Efetuada", JOptionPane.INFORMATION_MESSAGE);
        txtPesquisarProdutoVenda.setText("   Pesquisar Nome de Produto");
        lbTotalVenda.setText("0,00");
        txtQuantidadeVenda.setText("");
        atualizarTabelaProdutos();
        DefaultTableModel modelo = (DefaultTableModel) tblCarrinho.getModel();
        modelo.setRowCount(0);
         */
    }//GEN-LAST:event_btnConfirmarVendaActionPerformed

    private void btnPesquisarClienteVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarClienteVendaActionPerformed

        //VerificaÃ§Ã£o do Pesquisar ID Cliente
        if (txtIdCliente.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Digite o ID do Cliente!", "Erro!", JOptionPane.WARNING_MESSAGE);
        } else {
            int id = Integer.parseInt(txtIdCliente.getText());

            String retorno = ClienteDAO.buscarPorID(id);
            if (retorno.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Cliente nÃ£o encontrado!", "Erro!", JOptionPane.WARNING_MESSAGE);
                lbClienteVenda.setText("usuÃ¡rio");
            } else {
                lbClienteVenda.setText(retorno);
            }
        }


    }//GEN-LAST:event_btnPesquisarClienteVendaActionPerformed

    private void txtIdClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdClienteActionPerformed

    private void btnPesquisarVenda1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarVenda1ActionPerformed

        Date dataInicio = dtInicio.getDate(), dataTermino = dtTermino.getDate();
        DefaultTableModel modelo = (DefaultTableModel) tblRelatorio.getModel();

        if (dataInicio != null || dataTermino != null) {
            if (dataInicio.before(dataTermino)) {
                ArrayList<RelatorioSintetico> lstRelatorio = RelatorioSinteticoDAO.listar(dataInicio, dataTermino);

                modelo.setRowCount(0);

                SimpleDateFormat fm1 = new SimpleDateFormat("dd/MM/yyyy");
                String dataS = "";

                for (RelatorioSintetico obj : lstRelatorio) {
                    dataS = fm1.format(obj.getDataVenda());

                    modelo.addRow(new String[]{
                        String.valueOf(obj.getIdVenda()),
                        obj.getNome(),
                        "R$ " + String.format("%.2f", obj.getVlrVenda()),
                        dataS
                    });
                }
                if(valorTotalRelatorioSintetico() == 0.0){
                    lbTotalRelatorioSintetico.setText(String.format("%.2f",valorTotalRelatorioSintetico()));
                } else {
                    lbTotalRelatorioSintetico.setText(String.format("%.2f",valorTotalRelatorioSintetico()));
                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "Digite datas vÃ¡lidas!", "Erro!", JOptionPane.WARNING_MESSAGE);
                modelo.setRowCount(0);
                lbTotalRelatorioSintetico.setText("0,00");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Digite as datas!", "Erro!", JOptionPane.WARNING_MESSAGE);
            modelo.setRowCount(0);
            lbTotalRelatorioSintetico.setText("0,00");
        }


    }//GEN-LAST:event_btnPesquisarVenda1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windowss".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    public static void AddLinhaProduto(Object[] dataRow) {
        DefaultTableModel model = (DefaultTableModel) tblProdutos.getModel();
        model.addRow(dataRow);

        String frase = Arrays.toString(dataRow);
        boolean teste = frase.contains("true");

        if (teste) {
            DefaultTableModel model2 = (DefaultTableModel) tblVendas.getModel();
            model2.addRow(dataRow);
        }
    }

    public static void atualizarTabelaClientes() {

        ArrayList<Cliente> lstRetorno = ClienteDAO.listar();

        DefaultTableModel modelo = (DefaultTableModel) tblClientes.getModel();

        modelo.setRowCount(0);

        DateTimeFormatter fm1 = DateTimeFormatter.ofPattern("dd/MM/uuuu");
        String dataNascimentoS = "";

        for (Cliente obj : lstRetorno) {
            dataNascimentoS = obj.getDataNascimento().format(fm1);

            modelo.addRow(new String[]{
                String.valueOf(obj.getID()),
                String.valueOf(obj.getCpf()),
                obj.getNome(),
                String.valueOf(obj.getTelefone()),
                obj.getEmail(),
                obj.getEstadoCivil(),
                obj.getSexo(),
                obj.getRua(),
                obj.getEstado(),
                obj.getBairro(),
                dataNascimentoS
            });
        }
    }

    public static void atualizarTabelaProdutos() {

        ArrayList<Produto> lstRetorno = ProdutoDAO.listar();

        DefaultTableModel modelo = (DefaultTableModel) tblProdutos.getModel();
        DefaultTableModel modelo2 = (DefaultTableModel) tblVendas.getModel();

        modelo.setRowCount(0);
        modelo2.setRowCount(0);

        DateTimeFormatter fm1 = DateTimeFormatter.ofPattern("dd/MM/uuuu");
        String dataValidade = "";

        for (Produto obj : lstRetorno) {
            dataValidade = obj.getValidade().format(fm1);

            modelo.addRow(new String[]{
                String.valueOf(obj.getCodigo()),
                obj.getNome(),
                obj.getMarca(),
                obj.getCategoria(),
                "R$ " + String.format("%.2f", obj.getValor()),
                dataValidade,
                String.valueOf(obj.getQuantidade()),
                obj.getStatus() == true ? "Em estoque" : "Sem estoque"
            });

            if (obj.getStatus()) {
                modelo2.addRow(new String[]{
                    String.valueOf(obj.getCodigo()),
                    obj.getNome(),
                    obj.getMarca(),
                    obj.getCategoria(),
                    "R$ " + String.format("%.2f", obj.getValor()),
                    dataValidade,
                    String.valueOf(obj.getQuantidade()),
                    obj.getStatus() == true ? "Em estoque" : "Sem estoque"
                });
            }
        }
    }

    public static void exibirMensagemItemVendido(char letra) {

        if (letra == 'p') {
            JOptionPane.showMessageDialog(tblProdutos, "NÃ£o Ã© possÃ­vel excluir Produto jÃ¡ vendido!", "Erro!", JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(tblClientes, "NÃ£o Ã© possÃ­vel excluir Cliente que realizou uma compra!", "Erro!", JOptionPane.WARNING_MESSAGE);
        }
    }

    public static double valorTotalRelatorioSintetico() {
        double total = 0.0;
        DefaultTableModel modelo = (DefaultTableModel) tblRelatorio.getModel();

        for (int i = 0; i < modelo.getRowCount(); i++) {
            total += Conversor.converterValor(modelo.getValueAt(i, 2).toString());
        }
        return total;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.mycompany.supermercado.JCustoms.ButtonCustom btnAdicionarVenda;
    private com.mycompany.supermercado.JCustoms.ButtonCustom btnCancelarVenda;
    private com.mycompany.supermercado.JCustoms.ButtonCustom btnConfirmarVenda;
    private com.mycompany.supermercado.JCustoms.ButtonCustom btnDetalhes;
    private com.mycompany.supermercado.JCustoms.ButtonCustom btnEditarCliente;
    private com.mycompany.supermercado.JCustoms.ButtonCustom btnEditarProduto;
    private com.mycompany.supermercado.JCustoms.ButtonCustom btnExcluirCliente;
    private com.mycompany.supermercado.JCustoms.ButtonCustom btnExcluirProduto;
    private com.mycompany.supermercado.JCustoms.ButtonCustom btnNovoCliente;
    private com.mycompany.supermercado.JCustoms.ButtonCustom btnNovoProduto;
    private com.mycompany.supermercado.JCustoms.ButtonCustom btnPesquisarClienteVenda;
    private com.mycompany.supermercado.JCustoms.ButtonCustom btnPesquisarProduto;
    private com.mycompany.supermercado.JCustoms.ButtonCustom btnPesquisarProdutoVenda;
    private com.mycompany.supermercado.JCustoms.ButtonCustom btnPesquisarVenda1;
    private com.mycompany.supermercado.JCustoms.ButtonCustom btnPesquisarVenda2;
    private com.mycompany.supermercado.JCustoms.ButtonCustom btnVisualizarCliente;
    private com.mycompany.supermercado.JCustoms.ButtonCustom btnVisualizarCliente1;
    private com.mycompany.supermercado.JCustoms.ButtonCustom btnVisualizarProduto;
    private com.toedter.calendar.JDateChooser dtInicio;
    private com.toedter.calendar.JDateChooser dtTermino;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lbClienteVenda;
    private javax.swing.JLabel lbTotalRelatorioSintetico;
    public static javax.swing.JLabel lbTotalVenda;
    private javax.swing.JPanel tClientes;
    private javax.swing.JPanel tProdutos;
    private javax.swing.JPanel tRelatorios;
    private javax.swing.JPanel tVendas;
    private static javax.swing.JTable tblClientes;
    private static javax.swing.JTable tblProdutos;
    public static javax.swing.JTable tblRelatorio;
    public static javax.swing.JTable tblVendas;
    private com.mycompany.supermercado.JCustoms.TextFiledCustom txtIdCliente;
    private com.mycompany.supermercado.JCustoms.PesquisarCliente txtPesquisarCliente;
    private com.mycompany.supermercado.JCustoms.PesquisarProduto txtPesquisarProduto;
    private com.mycompany.supermercado.JCustoms.PesquisarProduto txtPesquisarProdutoVenda;
    private com.mycompany.supermercado.JCustoms.TextFiledCustom txtQuantidadeVenda;
    // End of variables declaration//GEN-END:variables
}
